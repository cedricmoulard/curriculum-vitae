# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/
    - coverage/

stages:
  - install
  - test
  - quality
  - build
  - deploy

install_job:
  stage: install
  script: npm install

test_job:
  stage: test
  script: npm run test

lint_job:
  stage: quality
  script: npm run lint

sonarqube_reports:
  stage: quality
  image: ciricihq/gitlab-sonar-scanner
  dependencies:
    - test_job
  variables:
    SONAR_URL: $SONAR_URL
    SONAR_ANALYSIS_MODE: publish
    SONAR_BRANCH: $CI_COMMIT_REF_SLUG
  script:
    - gitlab-sonar-scanner -Dsonar.login=$SONAR_LOGIN

build_job:
  stage: build
  script:
    - npm run build --prod
    - echo "BUILD SUCCESSFULLY"
  artifacts:
    paths:
      - dist/
    expire_in: 20 mins
  environment:
    name: production
  when: manual

deploy_job:
  stage: deploy
  image: python:3.5
  dependencies:
    - build_job
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export S3_BUCKET_NAME=$S3_BUCKET_NAME
    - export DISTRIBUTION_ID=$DISTRIBUTION_ID
    - pip install awscli --upgrade --user
    - export PATH=~/.local/bin:$PATH
    - aws s3 sync --acl public-read --delete dist/apps/curriculum-vitae $S3_BUCKET_NAME
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
    - echo "DEPLOYED SUCCESSFULLY"
  environment:
    name: production
  when: manual
